"""Remove profe_id from users

Revision ID: 66c8c5448269
Revises: ffc5b1f5b80b
Create Date: 2025-03-11 09:22:17.496088

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '66c8c5448269'
down_revision = 'ffc5b1f5b80b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('access_logs', schema=None) as batch_op:
        batch_op.alter_column('lab_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('access_logs_lab_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'laboratories', ['lab_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'profes', ['profe_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('profes', schema=None) as batch_op:
        batch_op.drop_constraint('profes_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('schedules', schema=None) as batch_op:
        batch_op.drop_constraint('schedules_lab_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'profes', ['profe_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'laboratories', ['lab_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('schedules', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('schedules_lab_id_fkey', 'laboratories', ['lab_id'], ['id'])

    with op.batch_alter_table('profes', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('profes_user_id_fkey', 'users', ['user_id'], ['id'])

    with op.batch_alter_table('access_logs', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('access_logs_lab_id_fkey', 'laboratories', ['lab_id'], ['id'], ondelete='SET NULL')
        batch_op.alter_column('lab_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    # ### end Alembic commands ###
